{
    "contracts": {
        "c:/Users/Nikos/source/repos/CSharpInWeb3SmartContracts/CSharpInWeb3SmartContracts/SmartContracts/FactoryPattern/FactoryPattern.sol": {
            "Car": {
                "abi": [],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212201422cb2a912470ba5500432e3ec558b088b7c83c2cb7eabe3f3b27ef62d4326864736f6c634300080f0033",
                        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ 0x22 0xCB 0x2A SWAP2 0x24 PUSH17 0xBA5500432E3EC558B088B7C83C2CB7EABE EXTCODEHASH EXTCODESIZE 0x27 0xEF PUSH3 0xD43268 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
                        "sourceMap": "218:18:0:-:0;;;;;;;;;;;;;;;;;;;"
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "6080604052600080fdfea26469706673582212201422cb2a912470ba5500432e3ec558b088b7c83c2cb7eabe3f3b27ef62d4326864736f6c634300080f0033",
                        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ 0x22 0xCB 0x2A SWAP2 0x24 PUSH17 0xBA5500432E3EC558B088B7C83C2CB7EABE EXTCODEHASH EXTCODESIZE 0x27 0xEF PUSH3 0xD43268 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
                        "sourceMap": "218:18:0:-:0;;;;;"
                    },
                    "gasEstimates": {
                        "creation": {
                            "codeDepositCost": "12600",
                            "executionCost": "66",
                            "totalCost": "12666"
                        }
                    },
                    "methodIdentifiers": {}
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/Nikos/source/repos/CSharpInWeb3SmartContracts/CSharpInWeb3SmartContracts/SmartContracts/FactoryPattern/FactoryPattern.sol\":\"Car\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"c:/Users/Nikos/source/repos/CSharpInWeb3SmartContracts/CSharpInWeb3SmartContracts/SmartContracts/FactoryPattern/FactoryPattern.sol\":{\"keccak256\":\"0xc127e8904f86fcfbe31eed2211cfd43855b04f6d65db90182e90f76efa625962\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d94e8b76d0d9302917d9ae2f5bf3463baaca7500f2db04af2a48b8348bbf7c8d\",\"dweb:/ipfs/QmeKqwYdLmQv3JtJt3a7Fp3hBpHkjB9w9LiFSrB2E79A9u\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [],
                    "types": null
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "version": 1
                }
            },
            "CarFactory": {
                "abi": [
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "name": "Cars",
                        "outputs": [
                            {
                                "internalType": "contract Car",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "createCar",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "608060405234801561001057600080fd5b506101d0806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063e77100d41461003b578063f40e03c214610045575b600080fd5b610043610074565b005b610058610053366004610125565b6100ef565b6040516001600160a01b03909116815260200160405180910390f35b600060405161008290610119565b604051809103906000f08015801561009e573d6000803e3d6000fd5b50600080546001810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180546001600160a01b0319166001600160a01b039290921691909117905550565b600081815481106100ff57600080fd5b6000918252602090912001546001600160a01b0316905081565b605c8061013f83390190565b60006020828403121561013757600080fd5b503591905056fe6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212201422cb2a912470ba5500432e3ec558b088b7c83c2cb7eabe3f3b27ef62d4326864736f6c634300080f0033a264697066735822122000ad9a85ded6c2baa2c20a2b6c75435eb73187cc2fd3f5f07c3790345ea81ddc64736f6c634300080f0033",
                        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE77100D4 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xF40E03C2 EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x74 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x53 CALLDATASIZE PUSH1 0x4 PUSH2 0x125 JUMP JUMPDEST PUSH2 0xEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x82 SWAP1 PUSH2 0x119 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x9E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP1 MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x5C DUP1 PUSH2 0x13F DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x137 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ 0x22 0xCB 0x2A SWAP2 0x24 PUSH17 0xBA5500432E3EC558B088B7C83C2CB7EABE EXTCODEHASH EXTCODESIZE 0x27 0xEF PUSH3 0xD43268 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0xAD SWAP11 DUP6 0xDE 0xD6 0xC2 0xBA LOG2 0xC2 EXP 0x2B PUSH13 0x75435EB73187CC2FD3F5F07C37 SWAP1 CALLVALUE 0x5E 0xA8 SAR 0xDC PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
                        "sourceMap": "69:145:0:-:0;;;;;;;;;;;;;;;;;;;"
                    },
                    "deployedBytecode": {
                        "functionDebugData": {
                            "@Cars_5": {
                                "entryPoint": 239,
                                "id": 5,
                                "parameterSlots": 0,
                                "returnSlots": 0
                            },
                            "@createCar_23": {
                                "entryPoint": 116,
                                "id": 23,
                                "parameterSlots": 0,
                                "returnSlots": 0
                            },
                            "abi_decode_tuple_t_uint256": {
                                "entryPoint": 293,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 1
                            },
                            "abi_encode_tuple_t_contract$_Car_$25__to_t_address__fromStack_reversed": {
                                "entryPoint": null,
                                "id": null,
                                "parameterSlots": 2,
                                "returnSlots": 1
                            }
                        },
                        "generatedSources": [
                            {
                                "ast": {
                                    "nodeType": "YulBlock",
                                    "src": "0:414:1",
                                    "statements": [
                                        {
                                            "nodeType": "YulBlock",
                                            "src": "6:3:1",
                                            "statements": []
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "84:110:1",
                                                "statements": [
                                                    {
                                                        "body": {
                                                            "nodeType": "YulBlock",
                                                            "src": "130:16:1",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "139:1:1",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            },
                                                                            {
                                                                                "kind": "number",
                                                                                "nodeType": "YulLiteral",
                                                                                "src": "142:1:1",
                                                                                "type": "",
                                                                                "value": "0"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "revert",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "132:6:1"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "132:12:1"
                                                                    },
                                                                    "nodeType": "YulExpressionStatement",
                                                                    "src": "132:12:1"
                                                                }
                                                            ]
                                                        },
                                                        "condition": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "dataEnd",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "105:7:1"
                                                                        },
                                                                        {
                                                                            "name": "headStart",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "114:9:1"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "sub",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "101:3:1"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "101:23:1"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "126:2:1",
                                                                    "type": "",
                                                                    "value": "32"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "slt",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "97:3:1"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "97:32:1"
                                                        },
                                                        "nodeType": "YulIf",
                                                        "src": "94:52:1"
                                                    },
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "155:33:1",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "178:9:1"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "calldataload",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "165:12:1"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "165:23:1"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "value0",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "155:6:1"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "name": "abi_decode_tuple_t_uint256",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "50:9:1",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "dataEnd",
                                                    "nodeType": "YulTypedName",
                                                    "src": "61:7:1",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "value0",
                                                    "nodeType": "YulTypedName",
                                                    "src": "73:6:1",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "14:180:1"
                                        },
                                        {
                                            "body": {
                                                "nodeType": "YulBlock",
                                                "src": "310:102:1",
                                                "statements": [
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "320:26:1",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "332:9:1"
                                                                },
                                                                {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "343:2:1",
                                                                    "type": "",
                                                                    "value": "32"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "add",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "328:3:1"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "328:18:1"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "tail",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "320:4:1"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "name": "headStart",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "362:9:1"
                                                                },
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "name": "value0",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "377:6:1"
                                                                        },
                                                                        {
                                                                            "arguments": [
                                                                                {
                                                                                    "arguments": [
                                                                                        {
                                                                                            "kind": "number",
                                                                                            "nodeType": "YulLiteral",
                                                                                            "src": "393:3:1",
                                                                                            "type": "",
                                                                                            "value": "160"
                                                                                        },
                                                                                        {
                                                                                            "kind": "number",
                                                                                            "nodeType": "YulLiteral",
                                                                                            "src": "398:1:1",
                                                                                            "type": "",
                                                                                            "value": "1"
                                                                                        }
                                                                                    ],
                                                                                    "functionName": {
                                                                                        "name": "shl",
                                                                                        "nodeType": "YulIdentifier",
                                                                                        "src": "389:3:1"
                                                                                    },
                                                                                    "nodeType": "YulFunctionCall",
                                                                                    "src": "389:11:1"
                                                                                },
                                                                                {
                                                                                    "kind": "number",
                                                                                    "nodeType": "YulLiteral",
                                                                                    "src": "402:1:1",
                                                                                    "type": "",
                                                                                    "value": "1"
                                                                                }
                                                                            ],
                                                                            "functionName": {
                                                                                "name": "sub",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "385:3:1"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "385:19:1"
                                                                        }
                                                                    ],
                                                                    "functionName": {
                                                                        "name": "and",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "373:3:1"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "373:32:1"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "mstore",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "355:6:1"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "355:51:1"
                                                        },
                                                        "nodeType": "YulExpressionStatement",
                                                        "src": "355:51:1"
                                                    }
                                                ]
                                            },
                                            "name": "abi_encode_tuple_t_contract$_Car_$25__to_t_address__fromStack_reversed",
                                            "nodeType": "YulFunctionDefinition",
                                            "parameters": [
                                                {
                                                    "name": "headStart",
                                                    "nodeType": "YulTypedName",
                                                    "src": "279:9:1",
                                                    "type": ""
                                                },
                                                {
                                                    "name": "value0",
                                                    "nodeType": "YulTypedName",
                                                    "src": "290:6:1",
                                                    "type": ""
                                                }
                                            ],
                                            "returnVariables": [
                                                {
                                                    "name": "tail",
                                                    "nodeType": "YulTypedName",
                                                    "src": "301:4:1",
                                                    "type": ""
                                                }
                                            ],
                                            "src": "199:213:1"
                                        }
                                    ]
                                },
                                "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_Car_$25__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
                                "id": 1,
                                "language": "Yul",
                                "name": "#utility.yul"
                            }
                        ],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063e77100d41461003b578063f40e03c214610045575b600080fd5b610043610074565b005b610058610053366004610125565b6100ef565b6040516001600160a01b03909116815260200160405180910390f35b600060405161008290610119565b604051809103906000f08015801561009e573d6000803e3d6000fd5b50600080546001810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180546001600160a01b0319166001600160a01b039290921691909117905550565b600081815481106100ff57600080fd5b6000918252602090912001546001600160a01b0316905081565b605c8061013f83390190565b60006020828403121561013757600080fd5b503591905056fe6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212201422cb2a912470ba5500432e3ec558b088b7c83c2cb7eabe3f3b27ef62d4326864736f6c634300080f0033a264697066735822122000ad9a85ded6c2baa2c20a2b6c75435eb73187cc2fd3f5f07c3790345ea81ddc64736f6c634300080f0033",
                        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE77100D4 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xF40E03C2 EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x74 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x53 CALLDATASIZE PUSH1 0x4 PUSH2 0x125 JUMP JUMPDEST PUSH2 0xEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x82 SWAP1 PUSH2 0x119 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x9E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP1 MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x5C DUP1 PUSH2 0x13F DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x137 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ 0x22 0xCB 0x2A SWAP2 0x24 PUSH17 0xBA5500432E3EC558B088B7C83C2CB7EABE EXTCODEHASH EXTCODESIZE 0x27 0xEF PUSH3 0xD43268 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0xAD SWAP11 DUP6 0xDE 0xD6 0xC2 0xBA LOG2 0xC2 EXP 0x2B PUSH13 0x75435EB73187CC2FD3F5F07C37 SWAP1 CALLVALUE 0x5E 0xA8 SAR 0xDC PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
                        "sourceMap": "69:145:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;120:91;;;:::i;:::-;;96:17;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;373:32:1;;;355:51;;343:2;328:18;96:17:0;;;;;;;120:91;159:7;169:9;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;189:4:0;:14;;;;;;;;;;;;;;-1:-1:-1;;;;;;189:14:0;-1:-1:-1;;;;;189:14:0;;;;;;;;;;-1:-1:-1;120:91:0:o;96:17::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;96:17:0;;-1:-1:-1;96:17:0;:::o;-1:-1:-1:-;;;;;;;;:::o;14:180:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:1;;14:180;-1:-1:-1;14:180:1:o"
                    },
                    "gasEstimates": {
                        "creation": {
                            "codeDepositCost": "92800",
                            "executionCost": "141",
                            "totalCost": "92941"
                        },
                        "external": {
                            "Cars(uint256)": "4602",
                            "createCar()": "infinite"
                        }
                    },
                    "methodIdentifiers": {
                        "Cars(uint256)": "f40e03c2",
                        "createCar()": "e77100d4"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Cars\",\"outputs\":[{\"internalType\":\"contract Car\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createCar\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/Nikos/source/repos/CSharpInWeb3SmartContracts/CSharpInWeb3SmartContracts/SmartContracts/FactoryPattern/FactoryPattern.sol\":\"CarFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"c:/Users/Nikos/source/repos/CSharpInWeb3SmartContracts/CSharpInWeb3SmartContracts/SmartContracts/FactoryPattern/FactoryPattern.sol\":{\"keccak256\":\"0xc127e8904f86fcfbe31eed2211cfd43855b04f6d65db90182e90f76efa625962\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d94e8b76d0d9302917d9ae2f5bf3463baaca7500f2db04af2a48b8348bbf7c8d\",\"dweb:/ipfs/QmeKqwYdLmQv3JtJt3a7Fp3hBpHkjB9w9LiFSrB2E79A9u\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [
                        {
                            "astId": 5,
                            "contract": "c:/Users/Nikos/source/repos/CSharpInWeb3SmartContracts/CSharpInWeb3SmartContracts/SmartContracts/FactoryPattern/FactoryPattern.sol:CarFactory",
                            "label": "Cars",
                            "offset": 0,
                            "slot": "0",
                            "type": "t_array(t_contract(Car)25)dyn_storage"
                        }
                    ],
                    "types": {
                        "t_array(t_contract(Car)25)dyn_storage": {
                            "base": "t_contract(Car)25",
                            "encoding": "dynamic_array",
                            "label": "contract Car[]",
                            "numberOfBytes": "32"
                        },
                        "t_contract(Car)25": {
                            "encoding": "inplace",
                            "label": "contract Car",
                            "numberOfBytes": "20"
                        }
                    }
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "version": 1
                }
            }
        }
    },
    "sources": {
        "c:/Users/Nikos/source/repos/CSharpInWeb3SmartContracts/CSharpInWeb3SmartContracts/SmartContracts/FactoryPattern/FactoryPattern.sol": {
            "ast": {
                "absolutePath": "c:/Users/Nikos/source/repos/CSharpInWeb3SmartContracts/CSharpInWeb3SmartContracts/SmartContracts/FactoryPattern/FactoryPattern.sol",
                "exportedSymbols": {
                    "Car": [
                        25
                    ],
                    "CarFactory": [
                        24
                    ]
                },
                "id": 26,
                "license": "UNLICENSED",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 1,
                        "literals": [
                            "solidity",
                            ">=",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "40:25:0"
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "CarFactory",
                        "contractDependencies": [
                            25
                        ],
                        "contractKind": "contract",
                        "fullyImplemented": true,
                        "id": 24,
                        "linearizedBaseContracts": [
                            24
                        ],
                        "name": "CarFactory",
                        "nameLocation": "78:10:0",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "constant": false,
                                "functionSelector": "f40e03c2",
                                "id": 5,
                                "mutability": "mutable",
                                "name": "Cars",
                                "nameLocation": "109:4:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 24,
                                "src": "96:17:0",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_Car_$25_$dyn_storage",
                                    "typeString": "contract Car[]"
                                },
                                "typeName": {
                                    "baseType": {
                                        "id": 3,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 2,
                                            "name": "Car",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 25,
                                            "src": "96:3:0"
                                        },
                                        "referencedDeclaration": 25,
                                        "src": "96:3:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Car_$25",
                                            "typeString": "contract Car"
                                        }
                                    },
                                    "id": 4,
                                    "nodeType": "ArrayTypeName",
                                    "src": "96:5:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_Car_$25_$dyn_storage_ptr",
                                        "typeString": "contract Car[]"
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 22,
                                    "nodeType": "Block",
                                    "src": "148:63:0",
                                    "statements": [
                                        {
                                            "assignments": [
                                                10
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 10,
                                                    "mutability": "mutable",
                                                    "name": "car",
                                                    "nameLocation": "163:3:0",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 22,
                                                    "src": "159:7:0",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_Car_$25",
                                                        "typeString": "contract Car"
                                                    },
                                                    "typeName": {
                                                        "id": 9,
                                                        "nodeType": "UserDefinedTypeName",
                                                        "pathNode": {
                                                            "id": 8,
                                                            "name": "Car",
                                                            "nodeType": "IdentifierPath",
                                                            "referencedDeclaration": 25,
                                                            "src": "159:3:0"
                                                        },
                                                        "referencedDeclaration": 25,
                                                        "src": "159:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_Car_$25",
                                                            "typeString": "contract Car"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 15,
                                            "initialValue": {
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "id": 13,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "NewExpression",
                                                    "src": "169:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Car_$25_$",
                                                        "typeString": "function () returns (contract Car)"
                                                    },
                                                    "typeName": {
                                                        "id": 12,
                                                        "nodeType": "UserDefinedTypeName",
                                                        "pathNode": {
                                                            "id": 11,
                                                            "name": "Car",
                                                            "nodeType": "IdentifierPath",
                                                            "referencedDeclaration": 25,
                                                            "src": "173:3:0"
                                                        },
                                                        "referencedDeclaration": 25,
                                                        "src": "173:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_Car_$25",
                                                            "typeString": "contract Car"
                                                        }
                                                    }
                                                },
                                                "id": 14,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "169:9:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_Car_$25",
                                                    "typeString": "contract Car"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "159:19:0"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 19,
                                                        "name": "car",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 10,
                                                        "src": "199:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_Car_$25",
                                                            "typeString": "contract Car"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_Car_$25",
                                                            "typeString": "contract Car"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 16,
                                                        "name": "Cars",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 5,
                                                        "src": "189:4:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_array$_t_contract$_Car_$25_$dyn_storage",
                                                            "typeString": "contract Car[] storage ref"
                                                        }
                                                    },
                                                    "id": 18,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "push",
                                                    "nodeType": "MemberAccess",
                                                    "src": "189:9:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_Car_$25_$dyn_storage_ptr_$_t_contract$_Car_$25_$returns$__$bound_to$_t_array$_t_contract$_Car_$25_$dyn_storage_ptr_$",
                                                        "typeString": "function (contract Car[] storage pointer,contract Car)"
                                                    }
                                                },
                                                "id": 20,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "189:14:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 21,
                                            "nodeType": "ExpressionStatement",
                                            "src": "189:14:0"
                                        }
                                    ]
                                },
                                "functionSelector": "e77100d4",
                                "id": 23,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "createCar",
                                "nameLocation": "129:9:0",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 6,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "138:2:0"
                                },
                                "returnParameters": {
                                    "id": 7,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "148:0:0"
                                },
                                "scope": 24,
                                "src": "120:91:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "public"
                            }
                        ],
                        "scope": 26,
                        "src": "69:145:0",
                        "usedErrors": []
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "Car",
                        "contractDependencies": [],
                        "contractKind": "contract",
                        "fullyImplemented": true,
                        "id": 25,
                        "linearizedBaseContracts": [
                            25
                        ],
                        "name": "Car",
                        "nameLocation": "227:3:0",
                        "nodeType": "ContractDefinition",
                        "nodes": [],
                        "scope": 26,
                        "src": "218:18:0",
                        "usedErrors": []
                    }
                ],
                "src": "40:196:0"
            },
            "id": 0
        }
    }
}