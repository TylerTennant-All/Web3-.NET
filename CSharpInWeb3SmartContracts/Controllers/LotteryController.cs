using CSharpInWeb3SmartContracts.Models;
using Microsoft.AspNetCore.Mvc;
using Nethereum.RPC.Eth.DTOs;
using Nethereum.Signer;
using Nethereum.Web3;
using Nethereum.Web3.Accounts;

namespace CSharpInWeb3SmartContracts.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class LotteryController : ControllerBase
    {
        private readonly IConfiguration _configuration;

        private readonly User _user = new User();

        public LotteryController(IConfiguration configuration)
        {
            _configuration = configuration;
            _user.BlockchainProvider = _configuration["BlockchainProvider"];
            _user.MetamaskAddress = _configuration["MetamaskAddress"];
            _user.PrivateKey = _configuration["PrivateKey"];
        }

        [HttpGet("Deploy")]
        public async Task<ActionResult> DeployContract(Chain chain)
        {
            Account? account = new Account(_user.PrivateKey, chain);
            Web3? web3 = new Web3(account, _user.BlockchainProvider);

            //https://elmah.io/tools/multiline-string-converter/
            //https://tools.techcybo.com/multiline-to-single-line
            string abi = @" [ 	{ 		""inputs"": [ 			{ 				""internalType"": ""address"", 				""name"": ""oracleAddress"", 				""type"": ""address"" 			} 		], 		""stateMutability"": ""nonpayable"", 		""type"": ""constructor"" 	}, 	{ 		""inputs"": [], 		""name"": ""enter"", 		""outputs"": [], 		""stateMutability"": ""payable"", 		""type"": ""function"" 	}, 	{ 		""inputs"": [], 		""name"": ""getBalance"", 		""outputs"": [ 			{ 				""internalType"": ""uint256"", 				""name"": """", 				""type"": ""uint256"" 			} 		], 		""stateMutability"": ""view"", 		""type"": ""function"" 	}, 	{ 		""inputs"": [], 		""name"": ""getPlayers"", 		""outputs"": [ 			{ 				""internalType"": ""address payable[]"", 				""name"": """", 				""type"": ""address[]"" 			} 		], 		""stateMutability"": ""view"", 		""type"": ""function"" 	}, 	{ 		""inputs"": [], 		""name"": ""getRandomNumber"", 		""outputs"": [ 			{ 				""internalType"": ""uint256"", 				""name"": """", 				""type"": ""uint256"" 			} 		], 		""stateMutability"": ""view"", 		""type"": ""function"" 	}, 	{ 		""inputs"": [ 			{ 				""internalType"": ""uint256"", 				""name"": ""historyLotteryId"", 				""type"": ""uint256"" 			} 		], 		""name"": ""getWinnerByLottery"", 		""outputs"": [ 			{ 				""internalType"": ""address payable"", 				""name"": """", 				""type"": ""address"" 			} 		], 		""stateMutability"": ""view"", 		""type"": ""function"" 	}, 	{ 		""inputs"": [ 			{ 				""internalType"": ""uint256"", 				""name"": """", 				""type"": ""uint256"" 			} 		], 		""name"": ""lotteryHistory"", 		""outputs"": [ 			{ 				""internalType"": ""address payable"", 				""name"": """", 				""type"": ""address"" 			} 		], 		""stateMutability"": ""view"", 		""type"": ""function"" 	}, 	{ 		""inputs"": [], 		""name"": ""lotteryId"", 		""outputs"": [ 			{ 				""internalType"": ""uint256"", 				""name"": """", 				""type"": ""uint256"" 			} 		], 		""stateMutability"": ""view"", 		""type"": ""function"" 	}, 	{ 		""inputs"": [], 		""name"": ""owner"", 		""outputs"": [ 			{ 				""internalType"": ""address"", 				""name"": """", 				""type"": ""address"" 			} 		], 		""stateMutability"": ""view"", 		""type"": ""function"" 	}, 	{ 		""inputs"": [], 		""name"": ""pickWinner"", 		""outputs"": [], 		""stateMutability"": ""nonpayable"", 		""type"": ""function"" 	}, 	{ 		""inputs"": [ 			{ 				""internalType"": ""uint256"", 				""name"": """", 				""type"": ""uint256"" 			} 		], 		""name"": ""players"", 		""outputs"": [ 			{ 				""internalType"": ""address payable"", 				""name"": """", 				""type"": ""address"" 			} 		], 		""stateMutability"": ""view"", 		""type"": ""function"" 	} ] ";
            string byteCode = "608060405234801561001057600080fd5b50604051610e45380380610e4583398181016040528101906100329190610124565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160038190555050610151565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100f1826100c6565b9050919050565b610101816100e6565b811461010c57600080fd5b50565b60008151905061011e816100f8565b92915050565b60006020828403121561013a576101396100c1565b5b60006101488482850161010f565b91505092915050565b610ce5806101606000396000f3fe6080604052600436106100915760003560e01c80638da5cb5b116100595780638da5cb5b1461017d578063dbdff2c1146101a8578063e580f47b146101d3578063e97dcb62146101fe578063f71d96cb1461020857610091565b806312065fe014610096578063281d098d146100c15780635d495aea146100fe5780636d6fe230146101155780638b5b9ccc14610152575b600080fd5b3480156100a257600080fd5b506100ab610245565b6040516100b891906107c1565b60405180910390f35b3480156100cd57600080fd5b506100e860048036038101906100e3919061080d565b61024d565b6040516100f5919061087b565b60405180910390f35b34801561010a57600080fd5b5061011361028a565b005b34801561012157600080fd5b5061013c6004803603810190610137919061080d565b610492565b604051610149919061087b565b60405180910390f35b34801561015e57600080fd5b506101676104c5565b6040516101749190610954565b60405180910390f35b34801561018957600080fd5b50610192610553565b60405161019f9190610997565b60405180910390f35b3480156101b457600080fd5b506101bd610579565b6040516101ca91906107c1565b60405180910390f35b3480156101df57600080fd5b506101e861060e565b6040516101f591906107c1565b60405180910390f35b610206610614565b005b34801561021457600080fd5b5061022f600480360381019061022a919061080d565b6106c2565b60405161023c919061087b565b60405180910390f35b600047905090565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102e457600080fd5b60006002805490506102f4610579565b6102fe91906109e1565b90506002818154811061031457610313610a12565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610384573d6000803e3d6000fd5b506002818154811061039957610398610a12565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660046000600354815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003600081548092919061042a90610a70565b9190505550600067ffffffffffffffff81111561044a57610449610ab8565b5b6040519080825280602002602001820160405280156104785781602001602082028036833780820191505090505b506002908051906020019061048e929190610701565b5050565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600280548060200260200160405190810160405280929190818152602001828054801561054957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116104ff575b5050505050905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff164260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663604a6fa9446040516020016105f0959493929190610bbc565b6040516020818303038152906040528051906020012060001c905090565b60035481565b662386f26fc10000341161065d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065490610c8f565b60405180910390fd5b6002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600281815481106106d257600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b82805482825590600052602060002090810192821561077a579160200282015b828111156107795782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610721565b5b509050610787919061078b565b5090565b5b808211156107a457600081600090555060010161078c565b5090565b6000819050919050565b6107bb816107a8565b82525050565b60006020820190506107d660008301846107b2565b92915050565b600080fd5b6107ea816107a8565b81146107f557600080fd5b50565b600081359050610807816107e1565b92915050565b600060208284031215610823576108226107dc565b5b6000610831848285016107f8565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108658261083a565b9050919050565b6108758161085a565b82525050565b6000602082019050610890600083018461086c565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6108cb8161085a565b82525050565b60006108dd83836108c2565b60208301905092915050565b6000602082019050919050565b600061090182610896565b61090b81856108a1565b9350610916836108b2565b8060005b8381101561094757815161092e88826108d1565b9750610939836108e9565b92505060018101905061091a565b5085935050505092915050565b6000602082019050818103600083015261096e81846108f6565b905092915050565b60006109818261083a565b9050919050565b61099181610976565b82525050565b60006020820190506109ac6000830184610988565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006109ec826107a8565b91506109f7836107a8565b925082610a0757610a066109b2565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a7b826107a8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610aad57610aac610a41565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008160601b9050919050565b6000610aff82610ae7565b9050919050565b6000610b1182610af4565b9050919050565b610b29610b2482610976565b610b06565b82525050565b6000819050919050565b610b4a610b45826107a8565b610b2f565b82525050565b60008160201b9050919050565b60008160401b9050919050565b6000610b8563ffffffff8416610b7f84610b50565b17610b5d565b905092915050565b6000808291508390509250929050565b610ba78282610b8d565b92509050610bb58282610b6a565b8352505050565b6000610bc88288610b18565b601482019150610bd88287610b39565b602082019150610be9828587610b9d565b601882019150610bf98284610b39565b6020820191508190509695505050505050565b600082825260208201905092915050565b7f4d696e696d756d20616d6f756e7420746f20706172746963697061746520697360008201527f20302e3031206574686572000000000000000000000000000000000000000000602082015250565b6000610c79602b83610c0c565b9150610c8482610c1d565b604082019050919050565b60006020820190508181036000830152610ca881610c6c565b905091905056fea2646970667358221220d1d0240881baa9cbca0ef52a233a5ccaf2f2d49320c551a60efc881646f6b50d64736f6c634300080e0033";

            TransactionReceipt? deployContract = await web3.Eth.DeployContract.SendRequestAndWaitForReceiptAsync(abi, byteCode, _user.MetamaskAddress);

            return Ok($"Deploy Contract Transaction Hash {deployContract.TransactionHash}");
        }
    }
}
